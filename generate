#!/usr/bin/env python
#
# MIT License

# Copyright (c) 2022 Martincz Gao

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

from libs.preference import getPreference
from ruamel.yaml import YAML

import os
import sys

ROOT_DIR = os.path.dirname(os.path.realpath(__file__))

class _Options(object):
  dns = False

def _ParseArguments(args):
  cmd = None
  opt = _Options()
  arg = []

  for i in range(len(args)):
    a = args[i]
    if a == '--dns':
      opt.dns = True
    elif not a.startswith('-'):
      cmd = a
      arg = args[i + 1:]
      break
  return cmd, opt, arg

def main(orig_args):
    cmd, opt, args = _ParseArguments(orig_args)

    yaml = YAML()
    yaml.allow_unicode = True
    yaml.explicit_start = False
    yaml.preserve_quotes = True
    yaml.indent(mapping=2, sequence=4, offset=2)

    # 读取默认配置
    with open(os.path.join(ROOT_DIR, 'configs/basic.yaml'), 'rb') as fp:
        cfg_basic = yaml.load(fp)

    # 合并偏好配置
    cfg_final = cfg_basic.copy()
    cfg_final.update(getPreference())

    if opt.dns != True and 'dns' in cfg_final.keys():
        del cfg_final['dns']

    # 生成最终配置
    with open(os.path.join(ROOT_DIR, 'config.yaml'), 'w', encoding='utf-8') as fp:
        yaml.dump(cfg_final, fp)

if __name__ == '__main__':
    main(sys.argv[1:])